// This file manages the passwords and compares user entered password with pre-set password

int pwm_idle = 0;                     // This is the idle state of password manager
int pwm_correct = 1;                  // This is the state of the password manager when the user entered password is correct
int pwm_master_correct = 2;           // This is the state of the password manager when the master password is entered correctly
int delay_counter = 0;                // This delay counter is used to reset the current state of password manager after 100 loops
char operator_password[5] = {"*123"}; // This array is where the system password to arm the system is stored
char master_password[5] = {"#497"};   // This array is where the master password to get into configure mode is stored
int pwm_current_state = pwm_idle;     // This is the current state of password manager and it is set to idle iin the beginning

void pwm_loop() {
  // Putting a null character at the end of password_entered so that it can be used as a string
  password_entered[4] = 0;
  // Compares the password_entered with the password that arms the system
  if (strcmp(password_entered, operator_password) == 0 && pwm_current_state == pwm_idle) {
    // This changes the state of password manager to signal the system that the correct password is entered
    pwm_current_state = pwm_correct;
    // This clears the password string
    memset(password_entered, 0, 5);
  }
  // When the system password is correct or the master password is correct
  else if (pwm_current_state == pwm_correct || pwm_current_state == pwm_master_correct) {
    // Add one increment to counter
    delay_counter++;
    // After 100 loops the state of password entered correctly is cleared to idle 
    if (delay_counter > 100) {
      // Change the state of password manager back to idle
      pwm_current_state = pwm_idle;
      // Reset the counter
      delay_counter = 0;
    }
  }
  // Compares the password_entered with the master password and password manager is idle
  else if (strcmp(master_password, password_entered) == 0 && pwm_current_state == pwm_idle) {
    // Changes the state of password manager to master password correct
    pwm_current_state = pwm_master_correct;
    // This clears the password string
    memset(password_entered, 0, 5);
  }
  // When a four digits incorrect password is entered and password manager is idle
  else if (strlen (password_entered) == 4 && strcmp(password_entered, operator_password) != 0 && pwm_current_state == pwm_idle) {
    // Chnage the state of the led to error which makes it blink
    led_current_state = led_error_state;
    // This clears the password string
    memset(password_entered, 0, 5);
  }
}
