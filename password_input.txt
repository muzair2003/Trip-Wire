// This file is responsible to store a password character from the keypad between key pressed and idle states of keypad and it also reset the password index when the '#' or '*' is entered

int pwd_in_idle = 0;                    // This is the state of the password input when no key is pressed
int pwd_in_character_entered = 1;       // This is the state of the password when a character is entered
int pwd_in_current_state = pwd_in_idle; // This is the current state of the password
char password_entered[5] = {0};         // This is the array that contains the password entered
int character_counter = 0;              // Counter to insert the password characters

void password_input() {
  // When a key is pressed and the password input state is idle
  if (keypad_current_state ==  keypad_key_pressed && pwd_in_current_state == pwd_in_idle) {
    // Change the current state of password to the character entered state
    pwd_in_current_state = pwd_in_character_entered;
    // Resets character counter when more characters than password_entered size are pressed 
    // This also reset the character_counter when '*' or '#' key is pressed 
    if (keypad_key == '*' || keypad_key == '#' || character_counter > 4) {
      character_counter = 0;
    }
    // This is where the password is saved respective to index(character_counter)
    password_entered[character_counter] = keypad_key;
    // This increments the counter up by one
    character_counter++;
  }
  // When the keypad is OFF and the password is in the character_entered state
  else if (keypad_current_state == keypad_idle && pwd_in_current_state == pwd_in_character_entered) {
    // Change the state of password back to idle
    pwd_in_current_state = pwd_in_idle;
  }
}
